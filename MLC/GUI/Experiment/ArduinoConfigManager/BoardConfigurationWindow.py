import os
import sys

from PyQt5.QtWidgets import QMainWindow
from PyQt5.QtWidgets import QTableWidgetItem
from PyQt5 import QtCore

from MLC.GUI.Autogenerated.autogenerated import Ui_BoardConfigurationWindow
from MLC.GUI.Experiment.ArduinoConfigManager.ArduinoBoardDialog import ArduinoBoardDialog
from MLC.GUI.Experiment.ArduinoConfigManager.ArduinoConnectionDialog import ArduinoConnectionDialog


class BoardConfigurationWindow(QMainWindow):

    def __init__(self, parent=None):
        super(BoardConfigurationWindow, self).__init__(parent)
        self.ui = Ui_BoardConfigurationWindow()
        self.ui.setupUi(self)

        def insert_item(index, board_name, image_name):
            image_path_list = [os.path.dirname(os.path.abspath(__file__)), "images",  image_name]
            image_path = os.path.join(*image_path_list)
            variant = QtCore.QVariant(image_path)
            item_name = _translate("BoardConfigurationWindow", board_name)
            self.ui.arduinoBoard.insertItem(index, item_name, variant)

        self.ui.arduinoBoard.clear()
        _translate = QtCore.QCoreApplication.translate
        insert_item(0, "Arduino Due", "due.png")
        insert_item(1, "Arduino Uno", "uno.jpg")
        insert_item(0, "Arduino Mega", "mega.png")

    def showPinout(self):
        index = self.ui.arduinoBoard.currentIndex()
        path = self.ui.arduinoBoard.itemData(index)
        dialog = ArduinoBoardDialog(path)
        dialog.exec_()

    def checkConnection(self):
        dialog = ArduinoConnectionDialog()
        dialog.exec_()

    def insertDigitalPin(self):
        self.insertPin(self.ui.digitalPins, self.ui.digitalPinType, self.ui.digitalPinsList)

    def insertAnalogPin(self):
        self.insertPin(self.ui.analogPins, self.ui.analogPinType, self.ui.analogPinList)

    def insertPin(self, pins, pinType, pinsList):
        pin = pins.currentIndex()
        t_pin = pins.currentText()
        p_type = pinType.currentText()
        row = pinsList.rowCount()
        if pin < 0:
            return
        pinsList.insertRow(row)
        widget = QTableWidgetItem(t_pin)
        widget.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
        pinsList.setItem(row, 0, widget)
        widget = QTableWidgetItem(p_type)
        widget.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
        pinsList.setItem(row, 1, widget)
        pinsList.verticalHeader().setVisible(False)
        pins.removeItem(pin)
